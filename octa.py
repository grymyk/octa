faces = [
    [(1,0,0), (0,1,0), (0,0,1)],
    [(1,0,0), (0,0,-1), (0,1,0)],
    [(1,0,0), (0,0,1), (0,-1,0)],
    [(1,0,0), (0,-1,0), (0,0,-1)],
    [(-1,0,0), (0,0,1), (0,1,0)],
    [(-1,0,0), (0,1,0), (0,0,-1)],
    [(-1,0,0), (0,-1,0), (0,0,1)],
    [(-1,0,0), (0,0,-1), (0,-1,0)],
]

# ~ [[1,0,0], [0,1,0], [0,0,1]],
            # ~ [[1,0,0], [0,0,-1], [0,1,0]],
            # ~ [[1,0,0], [0,0,1], [0,-1,0]],
            # ~ [[1,0,0], [0,-1,0], [0,0,-1]],
            # ~ [[-1,0,0], [0,0,1], [0,1,0]],
            # ~ [[-1,0,0], [0,1,0], [0,0,-1]],
            # ~ [[-1,0,0], [0,-1,0], [0,0,1]],
            # ~ [[-1,0,0], [0,0,-1], [0,-1,0]],
        
class Octahedron():
    def __init__(self, normal):
        print(normal)
        
        self.faces = [
    [(1,0,0), (0,1,0), (0,0,1)],
    [(1,0,0), (0,0,-1), (0,1,0)],
    [(1,0,0), (0,0,1), (0,-1,0)],
    [(1,0,0), (0,-1,0), (0,0,-1)],
    [(-1,0,0), (0,0,1), (0,1,0)],
    [(-1,0,0), (0,1,0), (0,0,-1)],
    [(-1,0,0), (0,-1,0), (0,0,1)],
    [(-1,0,0), (0,0,-1), (0,-1,0)],
]
        
        self.octa = self.shiftFaces(normal)
        
    def getFaces(self):
        return self.faces
    
    def shiftFaces(self, v):
        return [vert for face in self.faces for vert in face] 
        
